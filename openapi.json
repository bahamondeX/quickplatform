{
	"openapi": "3.1.0",
	"info": {
		"title": "FastAPI",
		"version": "0.1.0"
	},
	"paths": {
		"/api/v1/functions": {
			"post": {
				"summary": "Create Function",
				"operationId": "create_function_api_v1_functions_post",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateFunction"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Functions",
				"operationId": "list_functions_api_v1_functions_get",
				"parameters": [
					{
						"name": "function_version",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"default": "ALL",
							"title": "Function Version"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 10000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/account-settings": {
			"get": {
				"summary": "Get Account Settings",
				"operationId": "get_account_settings_api_v1_account_settings_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}": {
			"get": {
				"summary": "Get Function",
				"operationId": "get_function_api_v1_functions__function_name__get",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "qualifier",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Qualifier"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Function",
				"operationId": "delete_function_api_v1_functions__function_name__delete",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "qualifier",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Qualifier"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/code": {
			"put": {
				"summary": "Update Function Code",
				"operationId": "update_function_code_api_v1_functions__function_name__code_put",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateFunctionCode"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/configuration": {
			"put": {
				"summary": "Update Function Configuration",
				"operationId": "update_function_configuration_api_v1_functions__function_name__configuration_put",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateFunctionConfiguration"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "Get Function Configuration",
				"operationId": "get_function_configuration_api_v1_functions__function_name__configuration_get",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "qualifier",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Qualifier"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/code-signing-config": {
			"get": {
				"summary": "Get Function Code Signing Config",
				"operationId": "get_function_code_signing_config_api_v1_functions__function_name__code_signing_config_get",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/event-source-mappings": {
			"get": {
				"summary": "List Function Event Source Mappings",
				"operationId": "list_function_event_source_mappings_api_v1_functions__function_name__event_source_mappings_get",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/event-source-mappings": {
			"post": {
				"summary": "Create Event Source Mapping",
				"operationId": "create_event_source_mapping_api_v1_event_source_mappings_post",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateEventSourceMapping"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Event Source Mappings",
				"operationId": "list_event_source_mappings_api_v1_event_source_mappings_get",
				"parameters": [
					{
						"name": "event_source_arn",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Event Source Arn"
						}
					},
					{
						"name": "function_name",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Function Name"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 10000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/event-source-mappings/{uuid}": {
			"get": {
				"summary": "Get Event Source Mapping",
				"operationId": "get_event_source_mapping_api_v1_event_source_mappings__uuid__get",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Event Source Mapping",
				"operationId": "delete_event_source_mapping_api_v1_event_source_mappings__uuid__delete",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Event Source Mapping",
				"operationId": "update_event_source_mapping_api_v1_event_source_mappings__uuid__put",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Uuid"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/src__lambda___UpdateEventSourceMapping"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/code-signing-configs/{code_signing_config_arn}": {
			"get": {
				"summary": "Get Code Signing Config",
				"operationId": "get_code_signing_config_api_v1_code_signing_configs__code_signing_config_arn__get",
				"parameters": [
					{
						"name": "code_signing_config_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Code Signing Config Arn"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Code Signing Config",
				"operationId": "delete_code_signing_config_api_v1_code_signing_configs__code_signing_config_arn__delete",
				"parameters": [
					{
						"name": "code_signing_config_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Code Signing Config Arn"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Code Signing Config",
				"operationId": "update_code_signing_config_api_v1_code_signing_configs__code_signing_config_arn__put",
				"parameters": [
					{
						"name": "code_signing_config_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Code Signing Config Arn"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CodeSigningConfig"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/code-signing-configs": {
			"get": {
				"summary": "List Code Signing Configs",
				"operationId": "list_code_signing_configs_api_v1_code_signing_configs_get",
				"parameters": [
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 10000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create Code Signing Config",
				"operationId": "create_code_signing_config_api_v1_code_signing_configs_post",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateCodeSigningConfig"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/concurrency": {
			"get": {
				"summary": "Get Function Concurrency",
				"operationId": "get_function_concurrency_api_v1_functions__function_name__concurrency_get",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Function Concurrency",
				"operationId": "delete_function_concurrency_api_v1_functions__function_name__concurrency_delete",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Put Function Concurrency",
				"operationId": "put_function_concurrency_api_v1_functions__function_name__concurrency_put",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutFunctionConcurrency"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/provisioned-concurrency-configs/{qualifier}": {
			"get": {
				"summary": "Get Provisioned Concurrency Config",
				"operationId": "get_provisioned_concurrency_config_api_v1_functions__function_name__provisioned_concurrency_configs__qualifier__get",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "qualifier",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Qualifier"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Provisioned Concurrency Config",
				"operationId": "delete_provisioned_concurrency_config_api_v1_functions__function_name__provisioned_concurrency_configs__qualifier__delete",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "qualifier",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Qualifier"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/provisioned-concurrency-configs": {
			"get": {
				"summary": "List Provisioned Concurrency Configs",
				"operationId": "list_provisioned_concurrency_configs_api_v1_functions__function_name__provisioned_concurrency_configs_get",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 50,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Put Provisioned Concurrency Config",
				"operationId": "put_provisioned_concurrency_config_api_v1_functions__function_name__provisioned_concurrency_configs_put",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateProvisionedConcurrencyConfig"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create Provisioned Concurrency Config",
				"operationId": "create_provisioned_concurrency_config_api_v1_functions__function_name__provisioned_concurrency_configs_post",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateProvisionedConcurrencyConfig"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/url-configs": {
			"get": {
				"summary": "Get Function Url Config",
				"operationId": "get_function_url_config_api_v1_functions__function_name__url_configs_get",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "qualifier",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Qualifier"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Function Url Config",
				"operationId": "delete_function_url_config_api_v1_functions__function_name__url_configs_delete",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "qualifier",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Qualifier"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Function Url Config",
				"operationId": "update_function_url_config_api_v1_functions__function_name__url_configs_put",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "qualifier",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Qualifier"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"additionalProperties": true,
								"title": "Config"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create Function Url Config",
				"operationId": "create_function_url_config_api_v1_functions__function_name__url_configs_post",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateFunctionUrlConfig"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/policy": {
			"get": {
				"summary": "Get Policy",
				"operationId": "get_policy_api_v1_functions__function_name__policy_get",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "qualifier",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Qualifier"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/permissions/{statement_id}": {
			"delete": {
				"summary": "Remove Permission",
				"operationId": "remove_permission_api_v1_functions__function_name__permissions__statement_id__delete",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "statement_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Statement Id"
						}
					},
					{
						"name": "qualifier",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Qualifier"
						}
					},
					{
						"name": "revision_id",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Revision Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/permissions": {
			"post": {
				"summary": "Add Permission",
				"operationId": "add_permission_api_v1_functions__function_name__permissions_post",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddPermission"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/layers": {
			"get": {
				"summary": "List Layers",
				"operationId": "list_layers_api_v1_layers_get",
				"parameters": [
					{
						"name": "compatible_runtime",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Compatible Runtime"
						}
					},
					{
						"name": "compatible_architecture",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Compatible Architecture"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 50,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/layers/{layer_name}/versions/{version_number}": {
			"get": {
				"summary": "Get Layer Version",
				"operationId": "get_layer_version_api_v1_layers__layer_name__versions__version_number__get",
				"parameters": [
					{
						"name": "layer_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Layer Name"
						}
					},
					{
						"name": "version_number",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "Version Number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Layer Version",
				"operationId": "delete_layer_version_api_v1_layers__layer_name__versions__version_number__delete",
				"parameters": [
					{
						"name": "layer_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Layer Name"
						}
					},
					{
						"name": "version_number",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "Version Number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/layers/{layer_name}/versions": {
			"get": {
				"summary": "List Layer Versions",
				"operationId": "list_layer_versions_api_v1_layers__layer_name__versions_get",
				"parameters": [
					{
						"name": "layer_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Layer Name"
						}
					},
					{
						"name": "compatible_runtime",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Compatible Runtime"
						}
					},
					{
						"name": "compatible_architecture",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Compatible Architecture"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 50,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create Layer Version",
				"operationId": "create_layer_version_api_v1_layers__layer_name__versions_post",
				"parameters": [
					{
						"name": "layer_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Layer Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateLayerVersion"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/invocations": {
			"post": {
				"summary": "Invoke Function",
				"operationId": "invoke_function_api_v1_functions__function_name__invocations_post",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InvokeFunction"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/versions": {
			"post": {
				"summary": "Publish Version",
				"operationId": "publish_version_api_v1_functions__function_name__versions_post",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "code_sha256",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Code Sha256"
						}
					},
					{
						"name": "description",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"default": "",
							"title": "Description"
						}
					},
					{
						"name": "revision_id",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Revision Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Versions By Function",
				"operationId": "list_versions_by_function_api_v1_functions__function_name__versions_get",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 10000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/aliases": {
			"post": {
				"summary": "Create Alias",
				"operationId": "create_alias_api_v1_functions__function_name__aliases_post",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAlias"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Aliases",
				"operationId": "list_aliases_api_v1_functions__function_name__aliases_get",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "function_version",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Function Version"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 10000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/{function_name}/aliases/{alias_name}": {
			"get": {
				"summary": "Get Alias",
				"operationId": "get_alias_api_v1_functions__function_name__aliases__alias_name__get",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "alias_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Alias Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Alias",
				"operationId": "update_alias_api_v1_functions__function_name__aliases__alias_name__put",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "alias_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Alias Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateAlias"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Alias",
				"operationId": "delete_alias_api_v1_functions__function_name__aliases__alias_name__delete",
				"parameters": [
					{
						"name": "function_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Function Name"
						}
					},
					{
						"name": "alias_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Alias Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/resources/{resource_arn}/tags": {
			"post": {
				"summary": "Tag Resource",
				"operationId": "tag_resource_api_v1_resources__resource_arn__tags_post",
				"parameters": [
					{
						"name": "resource_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Resource Arn"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								},
								"title": "Tags"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Untag Resource",
				"operationId": "untag_resource_api_v1_resources__resource_arn__tags_delete",
				"parameters": [
					{
						"name": "resource_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Resource Arn"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"title": "Tag Keys"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Tags",
				"operationId": "list_tags_api_v1_resources__resource_arn__tags_get",
				"parameters": [
					{
						"name": "resource_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Resource Arn"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/buckets": {
			"get": {
				"summary": "List Buckets",
				"operationId": "list_buckets_api_v1_buckets_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create Bucket",
				"operationId": "create_bucket_api_v1_buckets_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateBucket"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/buckets/{bucket_name}": {
			"delete": {
				"summary": "Delete Bucket",
				"operationId": "delete_bucket_api_v1_buckets__bucket_name__delete",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Bucket Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/buckets/{bucket_name}/exists": {
			"get": {
				"summary": "Bucket Exists",
				"operationId": "bucket_exists_api_v1_buckets__bucket_name__exists_get",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Bucket Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/buckets/{bucket_name}/location": {
			"get": {
				"summary": "Get Bucket Location",
				"operationId": "get_bucket_location_api_v1_buckets__bucket_name__location_get",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Bucket Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/buckets/{bucket_name}/objects": {
			"post": {
				"summary": "Upload Object",
				"operationId": "upload_object_api_v1_buckets__bucket_name__objects_post",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Bucket Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UploadObject"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Objects",
				"operationId": "list_objects_api_v1_buckets__bucket_name__objects_get",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Bucket Name"
						}
					},
					{
						"name": "prefix",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"default": "",
							"title": "Prefix"
						}
					},
					{
						"name": "max_keys",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Keys"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/buckets/{bucket_name}/objects/{key}": {
			"delete": {
				"summary": "Delete Object",
				"operationId": "delete_object_api_v1_buckets__bucket_name__objects__key__delete",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Bucket Name"
						}
					},
					{
						"name": "key",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Key"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/buckets/{bucket_name}/objects/{key}/download": {
			"post": {
				"summary": "Download Object",
				"operationId": "download_object_api_v1_buckets__bucket_name__objects__key__download_post",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Bucket Name"
						}
					},
					{
						"name": "key",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Key"
						}
					},
					{
						"name": "file_path",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "File Path"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/buckets/{bucket_name}/website": {
			"post": {
				"summary": "Configure Website Hosting",
				"operationId": "configure_website_hosting_api_v1_buckets__bucket_name__website_post",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Bucket Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateBucketWebsiteHosting"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/buckets/{bucket_name}/policy": {
			"post": {
				"summary": "Set Bucket Policy",
				"operationId": "set_bucket_policy_api_v1_buckets__bucket_name__policy_post",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Bucket Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateBucketPolicy"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/buckets/{bucket_name}/notifications": {
			"post": {
				"summary": "Set Bucket Notification",
				"operationId": "set_bucket_notification_api_v1_buckets__bucket_name__notifications_post",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Bucket Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateBucketNotification"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/buckets/{bucket_name}/logging": {
			"post": {
				"summary": "Configure Logging",
				"operationId": "configure_logging_api_v1_buckets__bucket_name__logging_post",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Bucket Name"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateBucketLogging"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/lambda/event-source-mappings": {
			"post": {
				"summary": "Create Event Source Mapping",
				"operationId": "create_event_source_mapping_api_v1_lambda_event_source_mappings_post",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LambdaEventSourceMapping"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Event Source Mappings",
				"operationId": "list_event_source_mappings_api_v1_lambda_event_source_mappings_get",
				"parameters": [
					{
						"name": "function_name",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Function Name"
						}
					},
					{
						"name": "event_source_arn",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Event Source Arn"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/lambda/event-source-mappings/{uuid}": {
			"get": {
				"summary": "Get Event Source Mapping",
				"operationId": "get_event_source_mapping_api_v1_lambda_event_source_mappings__uuid__get",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Event Source Mapping",
				"operationId": "update_event_source_mapping_api_v1_lambda_event_source_mappings__uuid__put",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Uuid"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/src__s3__UpdateEventSourceMapping"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Event Source Mapping",
				"operationId": "delete_event_source_mapping_api_v1_lambda_event_source_mappings__uuid__delete",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/users": {
			"post": {
				"summary": "Create Iam User",
				"description": "Creates a new IAM user.",
				"operationId": "create_iam_user_api_v1_iam_users_post",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUser"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Iam Users",
				"description": "Lists all IAM users in the AWS account.",
				"operationId": "list_iam_users_api_v1_iam_users_get",
				"parameters": [
					{
						"name": "path_prefix",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Path Prefix"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Iam User",
				"description": "Updates an IAM user's name or path.",
				"operationId": "update_iam_user_api_v1_iam_users_put",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUser"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/users/{user_name}": {
			"get": {
				"summary": "Get Iam User",
				"description": "Retrieves information about a specific IAM user.",
				"operationId": "get_iam_user_api_v1_iam_users__user_name__get",
				"parameters": [
					{
						"name": "user_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam User",
				"description": "Deletes an IAM user.",
				"operationId": "delete_iam_user_api_v1_iam_users__user_name__delete",
				"parameters": [
					{
						"name": "user_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/access-keys": {
			"post": {
				"summary": "Create Iam Access Key",
				"description": "Creates a new access key for an IAM user.",
				"operationId": "create_iam_access_key_api_v1_iam_access_keys_post",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAccessKey"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam Access Key",
				"description": "Deletes an access key for an IAM user.",
				"operationId": "delete_iam_access_key_api_v1_iam_access_keys_delete",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DeleteAccessKey"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Iam Access Key",
				"description": "Updates the status of an access key (Active/Inactive).",
				"operationId": "update_iam_access_key_api_v1_iam_access_keys_put",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateAccessKey"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Iam Access Keys",
				"description": "Lists access keys for a specific IAM user or all access keys if no user is specified.",
				"operationId": "list_iam_access_keys_api_v1_iam_access_keys_get",
				"parameters": [
					{
						"name": "user_name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/roles": {
			"post": {
				"summary": "Create Iam Role",
				"description": "Creates a new IAM role.",
				"operationId": "create_iam_role_api_v1_iam_roles_post",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateRole"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Iam Roles",
				"description": "Lists all IAM roles in the AWS account.",
				"operationId": "list_iam_roles_api_v1_iam_roles_get",
				"parameters": [
					{
						"name": "path_prefix",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Path Prefix"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Iam Role",
				"description": "Updates an IAM role's description, max session duration, or name.",
				"operationId": "update_iam_role_api_v1_iam_roles_put",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateRole"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/roles/{role_name}": {
			"get": {
				"summary": "Get Iam Role",
				"description": "Retrieves information about a specific IAM role.",
				"operationId": "get_iam_role_api_v1_iam_roles__role_name__get",
				"parameters": [
					{
						"name": "role_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Role Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam Role",
				"description": "Deletes an IAM role.",
				"operationId": "delete_iam_role_api_v1_iam_roles__role_name__delete",
				"parameters": [
					{
						"name": "role_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Role Name"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/roles/{role_name}/assume-role-policy": {
			"put": {
				"summary": "Update Iam Assume Role Policy",
				"description": "Updates the assume role policy for an IAM role.",
				"operationId": "update_iam_assume_role_policy_api_v1_iam_roles__role_name__assume_role_policy_put",
				"parameters": [
					{
						"name": "role_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Role Name"
						}
					},
					{
						"name": "policy_document",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Document"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/policies": {
			"post": {
				"summary": "Create Iam Policy",
				"description": "Creates a new IAM managed policy.",
				"operationId": "create_iam_policy_api_v1_iam_policies_post",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreatePolicy"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Iam Policies",
				"description": "Lists all IAM managed policies.",
				"operationId": "list_iam_policies_api_v1_iam_policies_get",
				"parameters": [
					{
						"name": "scope",
						"in": "query",
						"required": false,
						"schema": {
							"enum": [
								"All",
								"AWS",
								"Local"
							],
							"type": "string",
							"default": "All",
							"title": "Scope"
						}
					},
					{
						"name": "only_attached",
						"in": "query",
						"required": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"title": "Only Attached"
						}
					},
					{
						"name": "path_prefix",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Path Prefix"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/policies/{policy_arn}": {
			"get": {
				"summary": "Get Iam Policy",
				"description": "Retrieves information about a specific IAM managed policy.",
				"operationId": "get_iam_policy_api_v1_iam_policies__policy_arn__get",
				"parameters": [
					{
						"name": "policy_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Arn"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam Policy",
				"description": "Deletes an IAM managed policy.",
				"operationId": "delete_iam_policy_api_v1_iam_policies__policy_arn__delete",
				"parameters": [
					{
						"name": "policy_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Arn"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/policy-versions": {
			"post": {
				"summary": "Create Iam Policy Version",
				"description": "Creates a new version of an IAM managed policy.",
				"operationId": "create_iam_policy_version_api_v1_iam_policy_versions_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreatePolicyVersion"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/policies/{policy_arn}/versions/{version_id}": {
			"get": {
				"summary": "Get Iam Policy Version",
				"description": "Retrieves information about a specific version of an IAM managed policy.",
				"operationId": "get_iam_policy_version_api_v1_iam_policies__policy_arn__versions__version_id__get",
				"parameters": [
					{
						"name": "policy_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Arn"
						}
					},
					{
						"name": "version_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Version Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam Policy Version",
				"description": "Deletes a specific version of an IAM managed policy.",
				"operationId": "delete_iam_policy_version_api_v1_iam_policies__policy_arn__versions__version_id__delete",
				"parameters": [
					{
						"name": "policy_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Arn"
						}
					},
					{
						"name": "version_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Version Id"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/policies/{policy_arn}/versions": {
			"get": {
				"summary": "List Iam Policy Versions",
				"description": "Lists all versions of an IAM managed policy.",
				"operationId": "list_iam_policy_versions_api_v1_iam_policies__policy_arn__versions_get",
				"parameters": [
					{
						"name": "policy_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Arn"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/policies/{policy_arn}/default-version": {
			"put": {
				"summary": "Set Default Iam Policy Version",
				"description": "Sets the specified version of an IAM managed policy as the default.",
				"operationId": "set_default_iam_policy_version_api_v1_iam_policies__policy_arn__default_version_put",
				"parameters": [
					{
						"name": "policy_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Arn"
						}
					},
					{
						"name": "version_id",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Version Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/users/attach-policy": {
			"post": {
				"summary": "Attach Iam User Policy",
				"description": "Attaches a managed policy to an IAM user.",
				"operationId": "attach_iam_user_policy_api_v1_iam_users_attach_policy_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AttachUserPolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/users/detach-policy": {
			"post": {
				"summary": "Detach Iam User Policy",
				"description": "Detaches a managed policy from an IAM user.",
				"operationId": "detach_iam_user_policy_api_v1_iam_users_detach_policy_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DetachUserPolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/roles/attach-policy": {
			"post": {
				"summary": "Attach Iam Role Policy",
				"description": "Attaches a managed policy to an IAM role.",
				"operationId": "attach_iam_role_policy_api_v1_iam_roles_attach_policy_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AttachRolePolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/roles/detach-policy": {
			"post": {
				"summary": "Detach Iam Role Policy",
				"description": "Detaches a managed policy from an IAM role.",
				"operationId": "detach_iam_role_policy_api_v1_iam_roles_detach_policy_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DetachRolePolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/groups/attach-policy": {
			"post": {
				"summary": "Attach Iam Group Policy",
				"description": "Attaches a managed policy to an IAM group.",
				"operationId": "attach_iam_group_policy_api_v1_iam_groups_attach_policy_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AttachGroupPolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/groups/detach-policy": {
			"post": {
				"summary": "Detach Iam Group Policy",
				"description": "Detaches a managed policy from an IAM group.",
				"operationId": "detach_iam_group_policy_api_v1_iam_groups_detach_policy_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DetachGroupPolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/users/{user_name}/attached-policies": {
			"get": {
				"summary": "List Attached Iam User Policies",
				"description": "Lists all managed policies attached to an IAM user.",
				"operationId": "list_attached_iam_user_policies_api_v1_iam_users__user_name__attached_policies_get",
				"parameters": [
					{
						"name": "user_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					},
					{
						"name": "path_prefix",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Path Prefix"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/roles/{role_name}/attached-policies": {
			"get": {
				"summary": "List Attached Iam Role Policies",
				"description": "Lists all managed policies attached to an IAM role.",
				"operationId": "list_attached_iam_role_policies_api_v1_iam_roles__role_name__attached_policies_get",
				"parameters": [
					{
						"name": "role_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Role Name"
						}
					},
					{
						"name": "path_prefix",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Path Prefix"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/groups/{group_name}/attached-policies": {
			"get": {
				"summary": "List Attached Iam Group Policies",
				"description": "Lists all managed policies attached to an IAM group.",
				"operationId": "list_attached_iam_group_policies_api_v1_iam_groups__group_name__attached_policies_get",
				"parameters": [
					{
						"name": "group_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Group Name"
						}
					},
					{
						"name": "path_prefix",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Path Prefix"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/users/inline-policy": {
			"put": {
				"summary": "Put Iam User Inline Policy",
				"description": "Attaches an inline policy to an IAM user.",
				"operationId": "put_iam_user_inline_policy_api_v1_iam_users_inline_policy_put",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutUserPolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/roles/inline-policy": {
			"put": {
				"summary": "Put Iam Role Inline Policy",
				"description": "Attaches an inline policy to an IAM role.",
				"operationId": "put_iam_role_inline_policy_api_v1_iam_roles_inline_policy_put",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutRolePolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/groups/inline-policy": {
			"put": {
				"summary": "Put Iam Group Inline Policy",
				"description": "Attaches an inline policy to an IAM group.",
				"operationId": "put_iam_group_inline_policy_api_v1_iam_groups_inline_policy_put",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutGroupPolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/users/{user_name}/inline-policy/{policy_name}": {
			"get": {
				"summary": "Get Iam User Inline Policy",
				"description": "Retrieves a specific inline policy for an IAM user.",
				"operationId": "get_iam_user_inline_policy_api_v1_iam_users__user_name__inline_policy__policy_name__get",
				"parameters": [
					{
						"name": "user_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					},
					{
						"name": "policy_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam User Inline Policy",
				"description": "Deletes a specific inline policy for an IAM user.",
				"operationId": "delete_iam_user_inline_policy_api_v1_iam_users__user_name__inline_policy__policy_name__delete",
				"parameters": [
					{
						"name": "user_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					},
					{
						"name": "policy_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Name"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/roles/{role_name}/inline-policy/{policy_name}": {
			"get": {
				"summary": "Get Iam Role Inline Policy",
				"description": "Retrieves a specific inline policy for an IAM role.",
				"operationId": "get_iam_role_inline_policy_api_v1_iam_roles__role_name__inline_policy__policy_name__get",
				"parameters": [
					{
						"name": "role_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Role Name"
						}
					},
					{
						"name": "policy_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam Role Inline Policy",
				"description": "Deletes a specific inline policy for an IAM role.",
				"operationId": "delete_iam_role_inline_policy_api_v1_iam_roles__role_name__inline_policy__policy_name__delete",
				"parameters": [
					{
						"name": "role_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Role Name"
						}
					},
					{
						"name": "policy_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Name"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/groups/{group_name}/inline-policy/{policy_name}": {
			"get": {
				"summary": "Get Iam Group Inline Policy",
				"description": "Retrieves a specific inline policy for an IAM group.",
				"operationId": "get_iam_group_inline_policy_api_v1_iam_groups__group_name__inline_policy__policy_name__get",
				"parameters": [
					{
						"name": "group_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Group Name"
						}
					},
					{
						"name": "policy_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam Group Inline Policy",
				"description": "Deletes a specific inline policy for an IAM group.",
				"operationId": "delete_iam_group_inline_policy_api_v1_iam_groups__group_name__inline_policy__policy_name__delete",
				"parameters": [
					{
						"name": "group_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Group Name"
						}
					},
					{
						"name": "policy_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Policy Name"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/users/{user_name}/inline-policies": {
			"get": {
				"summary": "List Iam User Inline Policies",
				"description": "Lists all inline policies for an IAM user.",
				"operationId": "list_iam_user_inline_policies_api_v1_iam_users__user_name__inline_policies_get",
				"parameters": [
					{
						"name": "user_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/roles/{role_name}/inline-policies": {
			"get": {
				"summary": "List Iam Role Inline Policies",
				"description": "Lists all inline policies for an IAM role.",
				"operationId": "list_iam_role_inline_policies_api_v1_iam_roles__role_name__inline_policies_get",
				"parameters": [
					{
						"name": "role_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Role Name"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/groups/{group_name}/inline-policies": {
			"get": {
				"summary": "List Iam Group Inline Policies",
				"description": "Lists all inline policies for an IAM group.",
				"operationId": "list_iam_group_inline_policies_api_v1_iam_groups__group_name__inline_policies_get",
				"parameters": [
					{
						"name": "group_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Group Name"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/groups": {
			"post": {
				"summary": "Create Iam Group",
				"description": "Creates a new IAM group.",
				"operationId": "create_iam_group_api_v1_iam_groups_post",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateGroup"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Iam Groups",
				"description": "Lists all IAM groups in the AWS account.",
				"operationId": "list_iam_groups_api_v1_iam_groups_get",
				"parameters": [
					{
						"name": "path_prefix",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Path Prefix"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Iam Group",
				"description": "Updates an IAM group's name or path.",
				"operationId": "update_iam_group_api_v1_iam_groups_put",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateGroup"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/groups/{group_name}": {
			"get": {
				"summary": "Get Iam Group",
				"description": "Retrieves information about a specific IAM group, including its users.",
				"operationId": "get_iam_group_api_v1_iam_groups__group_name__get",
				"parameters": [
					{
						"name": "group_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Group Name"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam Group",
				"description": "Deletes an IAM group.",
				"operationId": "delete_iam_group_api_v1_iam_groups__group_name__delete",
				"parameters": [
					{
						"name": "group_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Group Name"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/groups/add-user": {
			"post": {
				"summary": "Add Iam User To Group",
				"description": "Adds an IAM user to a group.",
				"operationId": "add_iam_user_to_group_api_v1_iam_groups_add_user_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddUserToGroup"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/groups/remove-user": {
			"post": {
				"summary": "Remove Iam User From Group",
				"description": "Removes an IAM user from a group.",
				"operationId": "remove_iam_user_from_group_api_v1_iam_groups_remove_user_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RemoveUserFromGroup"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/users/{user_name}/groups": {
			"get": {
				"summary": "List Iam Groups For User",
				"description": "Lists all IAM groups a user belongs to.",
				"operationId": "list_iam_groups_for_user_api_v1_iam_users__user_name__groups_get",
				"parameters": [
					{
						"name": "user_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/login-profiles": {
			"put": {
				"summary": "Update Iam Login Profile",
				"description": "Updates the password or password reset requirement for an IAM user's login profile.",
				"operationId": "update_iam_login_profile_api_v1_iam_login_profiles_put",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateLoginProfile"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create Iam Login Profile",
				"description": "Creates a login profile for an IAM user, enabling console access.",
				"operationId": "create_iam_login_profile_api_v1_iam_login_profiles_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateLoginProfile"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/login-profiles/{user_name}": {
			"get": {
				"summary": "Get Iam Login Profile",
				"description": "Retrieves the login profile for an IAM user.",
				"operationId": "get_iam_login_profile_api_v1_iam_login_profiles__user_name__get",
				"parameters": [
					{
						"name": "user_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam Login Profile",
				"description": "Deletes the login profile for an IAM user, disabling console access.",
				"operationId": "delete_iam_login_profile_api_v1_iam_login_profiles__user_name__delete",
				"parameters": [
					{
						"name": "user_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/instance-profiles": {
			"post": {
				"summary": "Create Iam Instance Profile",
				"description": "Creates a new IAM instance profile.",
				"operationId": "create_iam_instance_profile_api_v1_iam_instance_profiles_post",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateInstanceProfile"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Iam Instance Profiles",
				"description": "Lists all IAM instance profiles.",
				"operationId": "list_iam_instance_profiles_api_v1_iam_instance_profiles_get",
				"parameters": [
					{
						"name": "path_prefix",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Path Prefix"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/instance-profiles/{instance_profile_name}": {
			"get": {
				"summary": "Get Iam Instance Profile",
				"description": "Retrieves information about a specific IAM instance profile.",
				"operationId": "get_iam_instance_profile_api_v1_iam_instance_profiles__instance_profile_name__get",
				"parameters": [
					{
						"name": "instance_profile_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Instance Profile Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam Instance Profile",
				"description": "Deletes an IAM instance profile.",
				"operationId": "delete_iam_instance_profile_api_v1_iam_instance_profiles__instance_profile_name__delete",
				"parameters": [
					{
						"name": "instance_profile_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Instance Profile Name"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/instance-profiles/add-role": {
			"post": {
				"summary": "Add Iam Role To Instance Profile",
				"description": "Adds an IAM role to an instance profile.",
				"operationId": "add_iam_role_to_instance_profile_api_v1_iam_instance_profiles_add_role_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddRoleToInstanceProfile"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/instance-profiles/remove-role": {
			"post": {
				"summary": "Remove Iam Role From Instance Profile",
				"description": "Removes an IAM role from an instance profile.",
				"operationId": "remove_iam_role_from_instance_profile_api_v1_iam_instance_profiles_remove_role_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RemoveRoleFromInstanceProfile"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/roles/{role_name}/instance-profiles": {
			"get": {
				"summary": "List Iam Instance Profiles For Role",
				"description": "Lists all instance profiles associated with a specific IAM role.",
				"operationId": "list_iam_instance_profiles_for_role_api_v1_iam_roles__role_name__instance_profiles_get",
				"parameters": [
					{
						"name": "role_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Role Name"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/virtual-mfa-devices": {
			"post": {
				"summary": "Create Iam Virtual Mfa Device",
				"description": "Creates a new virtual MFA device.",
				"operationId": "create_iam_virtual_mfa_device_api_v1_iam_virtual_mfa_devices_post",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateVirtualMFADevice"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Iam Virtual Mfa Devices",
				"description": "Lists all virtual MFA devices.",
				"operationId": "list_iam_virtual_mfa_devices_api_v1_iam_virtual_mfa_devices_get",
				"parameters": [
					{
						"name": "assignment_status",
						"in": "query",
						"required": false,
						"schema": {
							"enum": [
								"Assigned",
								"Unassigned",
								"Any"
							],
							"type": "string",
							"default": "Any",
							"title": "Assignment Status"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/mfa-devices/enable": {
			"post": {
				"summary": "Enable Iam Mfa Device",
				"description": "Enables an MFA device for an IAM user.",
				"operationId": "enable_iam_mfa_device_api_v1_iam_mfa_devices_enable_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EnableMFADevice"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/mfa-devices/deactivate": {
			"post": {
				"summary": "Deactivate Iam Mfa Device",
				"description": "Deactivates an MFA device for an IAM user.",
				"operationId": "deactivate_iam_mfa_device_api_v1_iam_mfa_devices_deactivate_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DeactivateMFADevice"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/mfa-devices/resync": {
			"post": {
				"summary": "Resync Iam Mfa Device",
				"description": "Resynchronizes an MFA device with AWS.",
				"operationId": "resync_iam_mfa_device_api_v1_iam_mfa_devices_resync_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ResyncMFADevice"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/mfa-devices": {
			"get": {
				"summary": "List Iam Mfa Devices",
				"description": "Lists all MFA devices for a specific IAM user or all MFA devices if no user is specified.",
				"operationId": "list_iam_mfa_devices_api_v1_iam_mfa_devices_get",
				"parameters": [
					{
						"name": "user_name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/virtual-mfa-devices/{serial_number}": {
			"delete": {
				"summary": "Delete Iam Virtual Mfa Device",
				"description": "Deletes a virtual MFA device.",
				"operationId": "delete_iam_virtual_mfa_device_api_v1_iam_virtual_mfa_devices__serial_number__delete",
				"parameters": [
					{
						"name": "serial_number",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Serial Number"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/saml-providers": {
			"get": {
				"summary": "List Iam Saml Providers",
				"description": "Lists all SAML identity providers.",
				"operationId": "list_iam_saml_providers_api_v1_iam_saml_providers_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create Iam Saml Provider",
				"description": "Creates a new SAML identity provider.",
				"operationId": "create_iam_saml_provider_api_v1_iam_saml_providers_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateSAMLProvider"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/saml-providers/{saml_provider_arn}": {
			"get": {
				"summary": "Get Iam Saml Provider",
				"description": "Retrieves information about a specific SAML identity provider.",
				"operationId": "get_iam_saml_provider_api_v1_iam_saml_providers__saml_provider_arn__get",
				"parameters": [
					{
						"name": "saml_provider_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Saml Provider Arn"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Iam Saml Provider",
				"description": "Updates the SAML metadata document for a SAML identity provider.",
				"operationId": "update_iam_saml_provider_api_v1_iam_saml_providers__saml_provider_arn__put",
				"parameters": [
					{
						"name": "saml_provider_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Saml Provider Arn"
						}
					},
					{
						"name": "saml_metadata_document",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Saml Metadata Document"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam Saml Provider",
				"description": "Deletes a SAML identity provider.",
				"operationId": "delete_iam_saml_provider_api_v1_iam_saml_providers__saml_provider_arn__delete",
				"parameters": [
					{
						"name": "saml_provider_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Saml Provider Arn"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/oidc-providers": {
			"get": {
				"summary": "List Iam Oidc Providers",
				"description": "Lists all OpenID Connect (OIDC) identity providers.",
				"operationId": "list_iam_oidc_providers_api_v1_iam_oidc_providers_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create Iam Oidc Provider",
				"description": "Creates a new OpenID Connect (OIDC) identity provider.",
				"operationId": "create_iam_oidc_provider_api_v1_iam_oidc_providers_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateOIDCProvider"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/oidc-providers/{open_id_connect_provider_arn}": {
			"get": {
				"summary": "Get Iam Oidc Provider",
				"description": "Retrieves information about a specific OpenID Connect (OIDC) identity provider.",
				"operationId": "get_iam_oidc_provider_api_v1_iam_oidc_providers__open_id_connect_provider_arn__get",
				"parameters": [
					{
						"name": "open_id_connect_provider_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Open Id Connect Provider Arn"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam Oidc Provider",
				"description": "Deletes an OpenID Connect (OIDC) identity provider.",
				"operationId": "delete_iam_oidc_provider_api_v1_iam_oidc_providers__open_id_connect_provider_arn__delete",
				"parameters": [
					{
						"name": "open_id_connect_provider_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Open Id Connect Provider Arn"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/oidc-providers/{open_id_connect_provider_arn}/thumbprint": {
			"put": {
				"summary": "Update Iam Oidc Provider Thumbprint",
				"description": "Updates the list of certificate thumbprints for an OpenID Connect (OIDC) identity provider.",
				"operationId": "update_iam_oidc_provider_thumbprint_api_v1_iam_oidc_providers__open_id_connect_provider_arn__thumbprint_put",
				"parameters": [
					{
						"name": "open_id_connect_provider_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Open Id Connect Provider Arn"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"title": "Thumbprint List"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/oidc-providers/{open_id_connect_provider_arn}/add-client-id": {
			"post": {
				"summary": "Add Iam Client Id To Oidc Provider",
				"description": "Adds a new client ID to an OpenID Connect (OIDC) identity provider.",
				"operationId": "add_iam_client_id_to_oidc_provider_api_v1_iam_oidc_providers__open_id_connect_provider_arn__add_client_id_post",
				"parameters": [
					{
						"name": "open_id_connect_provider_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Open Id Connect Provider Arn"
						}
					},
					{
						"name": "client_id",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Client Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/oidc-providers/{open_id_connect_provider_arn}/remove-client-id": {
			"post": {
				"summary": "Remove Iam Client Id From Oidc Provider",
				"description": "Removes a client ID from an OpenID Connect (OIDC) identity provider.",
				"operationId": "remove_iam_client_id_from_oidc_provider_api_v1_iam_oidc_providers__open_id_connect_provider_arn__remove_client_id_post",
				"parameters": [
					{
						"name": "open_id_connect_provider_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Open Id Connect Provider Arn"
						}
					},
					{
						"name": "client_id",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Client Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/service-specific-credentials": {
			"post": {
				"summary": "Create Iam Service Specific Credential",
				"description": "Creates a new service-specific credential for an IAM user.",
				"operationId": "create_iam_service_specific_credential_api_v1_iam_service_specific_credentials_post",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateServiceSpecificCredential"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Iam Service Specific Credentials",
				"description": "Lists service-specific credentials for an IAM user or all service-specific credentials.",
				"operationId": "list_iam_service_specific_credentials_api_v1_iam_service_specific_credentials_get",
				"parameters": [
					{
						"name": "user_name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					},
					{
						"name": "service_name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Service Name"
						}
					},
					{
						"name": "status",
						"in": "query",
						"required": false,
						"schema": {
							"enum": [
								"Active",
								"Inactive"
							],
							"type": "string",
							"title": "Status"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/service-specific-credentials/{service_specific_credential_id}": {
			"delete": {
				"summary": "Delete Iam Service Specific Credential",
				"description": "Deletes a service-specific credential.",
				"operationId": "delete_iam_service_specific_credential_api_v1_iam_service_specific_credentials__service_specific_credential_id__delete",
				"parameters": [
					{
						"name": "service_specific_credential_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Service Specific Credential Id"
						}
					},
					{
						"name": "user_name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Iam Service Specific Credential",
				"description": "Updates the status of a service-specific credential.",
				"operationId": "update_iam_service_specific_credential_api_v1_iam_service_specific_credentials__service_specific_credential_id__put",
				"parameters": [
					{
						"name": "service_specific_credential_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Service Specific Credential Id"
						}
					},
					{
						"name": "status",
						"in": "query",
						"required": true,
						"schema": {
							"enum": [
								"Active",
								"Inactive"
							],
							"type": "string",
							"title": "Status"
						}
					},
					{
						"name": "user_name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/service-specific-credentials/describe": {
			"get": {
				"summary": "Describe Iam Service Specific Credentials",
				"description": "Retrieves information about service-specific credentials.",
				"operationId": "describe_iam_service_specific_credentials_api_v1_iam_service_specific_credentials_describe_get",
				"parameters": [
					{
						"name": "service_specific_credential_id",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Service Specific Credential Id"
						}
					},
					{
						"name": "user_name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "User Name"
						}
					},
					{
						"name": "service_name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Service Name"
						}
					},
					{
						"name": "status",
						"in": "query",
						"required": false,
						"schema": {
							"enum": [
								"Active",
								"Inactive"
							],
							"type": "string",
							"title": "Status"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/account-alias": {
			"post": {
				"summary": "Create Iam Account Alias",
				"description": "Creates an alias for your AWS account.",
				"operationId": "create_iam_account_alias_api_v1_iam_account_alias_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAccountAlias"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/account-alias/{account_alias}": {
			"delete": {
				"summary": "Delete Iam Account Alias",
				"description": "Deletes the alias for your AWS account.",
				"operationId": "delete_iam_account_alias_api_v1_iam_account_alias__account_alias__delete",
				"parameters": [
					{
						"name": "account_alias",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Account Alias"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/account-aliases": {
			"get": {
				"summary": "List Iam Account Aliases",
				"description": "Lists all aliases for your AWS account.",
				"operationId": "list_iam_account_aliases_api_v1_iam_account_aliases_get",
				"parameters": [
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/service-linked-roles": {
			"post": {
				"summary": "Create Iam Service Linked Role",
				"description": "Creates a service-linked role for a specified AWS service.",
				"operationId": "create_iam_service_linked_role_api_v1_iam_service_linked_roles_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateServiceLinkedRole"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/service-linked-roles/{role_name}": {
			"delete": {
				"summary": "Delete Iam Service Linked Role",
				"description": "Deletes a service-linked role.",
				"operationId": "delete_iam_service_linked_role_api_v1_iam_service_linked_roles__role_name__delete",
				"parameters": [
					{
						"name": "role_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Role Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/tags": {
			"post": {
				"summary": "Tag Iam Resource",
				"description": "Adds tags to an IAM user, role, policy, or instance profile.",
				"operationId": "tag_iam_resource_api_v1_iam_tags_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TagResource"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/untag": {
			"post": {
				"summary": "Untag Iam Resource",
				"description": "Removes tags from an IAM user, role, policy, or instance profile.",
				"operationId": "untag_iam_resource_api_v1_iam_untag_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UntagResource"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/resources/{resource_arn}/tags": {
			"get": {
				"summary": "List Iam Resource Tags",
				"description": "Lists the tags that are attached to an IAM user, role, policy, or instance profile.",
				"operationId": "list_iam_resource_tags_api_v1_iam_resources__resource_arn__tags_get",
				"parameters": [
					{
						"name": "resource_arn",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Resource Arn"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/credential-report/generate": {
			"post": {
				"summary": "Generate Iam Credential Report",
				"description": "Generates a credential report for your AWS account.",
				"operationId": "generate_iam_credential_report_api_v1_iam_credential_report_generate_post",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/credential-report": {
			"get": {
				"summary": "Get Iam Credential Report",
				"description": "Retrieves the credential report for your AWS account.",
				"operationId": "get_iam_credential_report_api_v1_iam_credential_report_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/organizations-access-report/generate": {
			"post": {
				"summary": "Generate Iam Organizations Access Report",
				"description": "Generates a report that includes details about the last attempted access to the AWS services by a principal in your AWS Organizations entity.",
				"operationId": "generate_iam_organizations_access_report_api_v1_iam_organizations_access_report_generate_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateOrganizationsAccessReport"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/organizations-access-report/{job_id}": {
			"get": {
				"summary": "Get Iam Organizations Access Report",
				"description": "Retrieves the status of your AWS Organizations access report.",
				"operationId": "get_iam_organizations_access_report_api_v1_iam_organizations_access_report__job_id__get",
				"parameters": [
					{
						"name": "job_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Job Id"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					},
					{
						"name": "sort_key",
						"in": "query",
						"required": false,
						"schema": {
							"enum": [
								"SERVICE_NAMESPACE_ASCENDING",
								"SERVICE_NAMESPACE_DESCENDING",
								"TOTAL_AUTHENTICATIONS_DESCENDING"
							],
							"type": "string",
							"title": "Sort Key"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/service-last-accessed-details/generate": {
			"post": {
				"summary": "Generate Iam Service Last Accessed Details",
				"description": "Generates a report that includes details about when the specified policy, user, role, or group was last used to access an AWS service.",
				"operationId": "generate_iam_service_last_accessed_details_api_v1_iam_service_last_accessed_details_generate_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateServiceLastAccessedDetails"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/service-last-accessed-details/{job_id}": {
			"get": {
				"summary": "Get Iam Service Last Accessed Details",
				"description": "Retrieves the status of the service last accessed report.",
				"operationId": "get_iam_service_last_accessed_details_api_v1_iam_service_last_accessed_details__job_id__get",
				"parameters": [
					{
						"name": "job_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Job Id"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/service-last-accessed-details-with-entities/{job_id}": {
			"get": {
				"summary": "Get Iam Service Last Accessed Details With Entities",
				"description": "Retrieves the details of entities that last accessed the specified AWS service.",
				"operationId": "get_iam_service_last_accessed_details_with_entities_api_v1_iam_service_last_accessed_details_with_entities__job_id__get",
				"parameters": [
					{
						"name": "job_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Job Id"
						}
					},
					{
						"name": "service_namespace",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Service Namespace"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/simulate-principal-policy": {
			"post": {
				"summary": "Simulate Iam Principal Policy",
				"description": "Simulates the results of a permissions policy for a principal (user, role, or group).",
				"operationId": "simulate_iam_principal_policy_api_v1_iam_simulate_principal_policy_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SimulatePrincipalPolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/simulate-custom-policy": {
			"post": {
				"summary": "Simulate Iam Custom Policy",
				"description": "Simulates the results of a set of IAM policies.",
				"operationId": "simulate_iam_custom_policy_api_v1_iam_simulate_custom_policy_post",
				"parameters": [
					{
						"name": "resource_policy",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Resource Policy"
						}
					},
					{
						"name": "max_items",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 1000,
							"title": "Max Items"
						}
					},
					{
						"name": "marker",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Marker"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_simulate_iam_custom_policy_api_v1_iam_simulate_custom_policy_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/iam/account-password-policy": {
			"get": {
				"summary": "Get Iam Account Password Policy",
				"description": "Retrieves the password policy for your AWS account.",
				"operationId": "get_iam_account_password_policy_api_v1_iam_account_password_policy_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create Or Update Iam Account Password Policy",
				"description": "Creates or updates the password policy for your AWS account.",
				"operationId": "create_or_update_iam_account_password_policy_api_v1_iam_account_password_policy_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAccountPasswordPolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Iam Account Password Policy",
				"description": "Deletes the password policy for your AWS account.",
				"operationId": "delete_iam_account_password_policy_api_v1_iam_account_password_policy_delete",
				"responses": {
					"204": {
						"description": "Successful Response"
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"AddPermission": {
				"properties": {
					"function_name": {
						"type": "string",
						"title": "Function Name"
					},
					"statement_id": {
						"type": "string",
						"title": "Statement Id"
					},
					"action": {
						"type": "string",
						"title": "Action"
					},
					"principal": {
						"type": "string",
						"title": "Principal"
					},
					"source_arn": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Source Arn"
					},
					"source_account": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Source Account"
					},
					"event_source_token": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Event Source Token"
					},
					"qualifier": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Qualifier"
					},
					"revision_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Revision Id"
					},
					"principal_org_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Principal Org Id"
					},
					"function_url_auth_type": {
						"anyOf": [
							{
								"type": "string",
								"enum": [
									"AWS_IAM",
									"NONE"
								]
							},
							{
								"type": "null"
							}
						],
						"title": "Function Url Auth Type"
					}
				},
				"type": "object",
				"required": [
					"function_name",
					"statement_id",
					"action",
					"principal"
				],
				"title": "AddPermission"
			},
			"AddRoleToInstanceProfile": {
				"properties": {
					"instance_profile_name": {
						"type": "string",
						"title": "Instance Profile Name"
					},
					"role_name": {
						"type": "string",
						"title": "Role Name"
					}
				},
				"type": "object",
				"required": [
					"instance_profile_name",
					"role_name"
				],
				"title": "AddRoleToInstanceProfile"
			},
			"AddUserToGroup": {
				"properties": {
					"group_name": {
						"type": "string",
						"title": "Group Name"
					},
					"user_name": {
						"type": "string",
						"title": "User Name"
					}
				},
				"type": "object",
				"required": [
					"group_name",
					"user_name"
				],
				"title": "AddUserToGroup"
			},
			"AttachGroupPolicy": {
				"properties": {
					"group_name": {
						"type": "string",
						"title": "Group Name"
					},
					"policy_arn": {
						"type": "string",
						"title": "Policy Arn"
					}
				},
				"type": "object",
				"required": [
					"group_name",
					"policy_arn"
				],
				"title": "AttachGroupPolicy"
			},
			"AttachRolePolicy": {
				"properties": {
					"role_name": {
						"type": "string",
						"title": "Role Name"
					},
					"policy_arn": {
						"type": "string",
						"title": "Policy Arn"
					}
				},
				"type": "object",
				"required": [
					"role_name",
					"policy_arn"
				],
				"title": "AttachRolePolicy"
			},
			"AttachUserPolicy": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"policy_arn": {
						"type": "string",
						"title": "Policy Arn"
					}
				},
				"type": "object",
				"required": [
					"user_name",
					"policy_arn"
				],
				"title": "AttachUserPolicy"
			},
			"Body_simulate_iam_custom_policy_api_v1_iam_simulate_custom_policy_post": {
				"properties": {
					"action_names": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Action Names"
					},
					"policy_input_list": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Policy Input List"
					},
					"resource_arns": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Resource Arns"
					},
					"context_entries": {
						"anyOf": [
							{
								"items": {
									"additionalProperties": true,
									"type": "object"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Context Entries"
					}
				},
				"type": "object",
				"required": [
					"action_names",
					"policy_input_list"
				],
				"title": "Body_simulate_iam_custom_policy_api_v1_iam_simulate_custom_policy_post"
			},
			"CodeSigningConfig": {
				"properties": {
					"code_signing_config_arn": {
						"type": "string",
						"title": "Code Signing Config Arn"
					},
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"allowed_publishers": {
						"additionalProperties": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"type": "object",
						"title": "Allowed Publishers"
					},
					"code_signing_policies": {
						"additionalProperties": {
							"type": "string",
							"enum": [
								"Warn",
								"Enforce"
							]
						},
						"type": "object",
						"title": "Code Signing Policies"
					}
				},
				"type": "object",
				"required": [
					"code_signing_config_arn",
					"allowed_publishers",
					"code_signing_policies"
				],
				"title": "CodeSigningConfig"
			},
			"CreateAccessKey": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					}
				},
				"type": "object",
				"required": [
					"user_name"
				],
				"title": "CreateAccessKey"
			},
			"CreateAccountAlias": {
				"properties": {
					"account_alias": {
						"type": "string",
						"title": "Account Alias"
					}
				},
				"type": "object",
				"required": [
					"account_alias"
				],
				"title": "CreateAccountAlias"
			},
			"CreateAccountPasswordPolicy": {
				"properties": {
					"minimum_password_length": {
						"type": "integer",
						"title": "Minimum Password Length",
						"default": 6
					},
					"require_symbols": {
						"type": "boolean",
						"title": "Require Symbols",
						"default": false
					},
					"require_numbers": {
						"type": "boolean",
						"title": "Require Numbers",
						"default": false
					},
					"require_uppercase_characters": {
						"type": "boolean",
						"title": "Require Uppercase Characters",
						"default": false
					},
					"require_lowercase_characters": {
						"type": "boolean",
						"title": "Require Lowercase Characters",
						"default": false
					},
					"allow_users_to_change_password": {
						"type": "boolean",
						"title": "Allow Users To Change Password",
						"default": true
					},
					"max_password_age": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Max Password Age"
					},
					"password_reuse_prevention": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Password Reuse Prevention"
					},
					"hard_expiry": {
						"type": "boolean",
						"title": "Hard Expiry",
						"default": false
					}
				},
				"type": "object",
				"title": "CreateAccountPasswordPolicy"
			},
			"CreateAlias": {
				"properties": {
					"function_name": {
						"type": "string",
						"title": "Function Name"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"function_version": {
						"type": "string",
						"title": "Function Version"
					},
					"description": {
						"type": "string",
						"title": "Description",
						"default": ""
					},
					"routing_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Routing Config"
					}
				},
				"type": "object",
				"required": [
					"function_name",
					"name",
					"function_version",
					"routing_config"
				],
				"title": "CreateAlias"
			},
			"CreateBucket": {
				"properties": {
					"bucket": {
						"type": "string",
						"title": "Bucket"
					},
					"region": {
						"type": "string",
						"enum": [
							"EU",
							"af-south-1",
							"ap-east-1",
							"ap-northeast-1",
							"ap-northeast-2",
							"ap-northeast-3",
							"ap-south-1",
							"ap-south-2",
							"ap-southeast-1",
							"ap-southeast-2",
							"ap-southeast-3",
							"ap-southeast-4",
							"ap-southeast-5",
							"ca-central-1",
							"cn-north-1",
							"cn-northwest-1",
							"eu-central-1",
							"eu-north-1",
							"eu-south-1",
							"eu-west-1",
							"eu-west-2",
							"eu-west-3",
							"me-central-1",
							"me-south-1",
							"sa-east-1",
							"us-east-1",
							"us-east-2",
							"us-west-1",
							"us-west-2"
						],
						"title": "Region"
					},
					"acl": {
						"type": "string",
						"enum": [
							"authenticated-read",
							"private",
							"public-read",
							"public-read-write"
						],
						"title": "Acl"
					},
					"versioning": {
						"type": "boolean",
						"title": "Versioning",
						"default": false
					},
					"encryption": {
						"type": "boolean",
						"title": "Encryption",
						"default": false
					},
					"logging": {
						"type": "boolean",
						"title": "Logging",
						"default": false
					}
				},
				"type": "object",
				"required": [
					"bucket",
					"region",
					"acl"
				],
				"title": "CreateBucket"
			},
			"CreateBucketLogging": {
				"properties": {
					"bucket": {
						"type": "string",
						"title": "Bucket"
					},
					"target_bucket": {
						"type": "string",
						"title": "Target Bucket"
					},
					"target_prefix": {
						"type": "string",
						"title": "Target Prefix",
						"default": ""
					}
				},
				"type": "object",
				"required": [
					"bucket",
					"target_bucket"
				],
				"title": "CreateBucketLogging"
			},
			"CreateBucketNotification": {
				"properties": {
					"bucket": {
						"type": "string",
						"title": "Bucket"
					},
					"notification": {
						"type": "string",
						"title": "Notification"
					}
				},
				"type": "object",
				"required": [
					"bucket",
					"notification"
				],
				"title": "CreateBucketNotification"
			},
			"CreateBucketPolicy": {
				"properties": {
					"bucket": {
						"type": "string",
						"title": "Bucket"
					},
					"policy": {
						"type": "string",
						"title": "Policy"
					}
				},
				"type": "object",
				"required": [
					"bucket",
					"policy"
				],
				"title": "CreateBucketPolicy"
			},
			"CreateBucketWebsiteHosting": {
				"properties": {
					"bucket": {
						"type": "string",
						"title": "Bucket"
					},
					"index_document": {
						"type": "string",
						"title": "Index Document",
						"default": "index.html"
					},
					"error_document": {
						"type": "string",
						"title": "Error Document",
						"default": "error.html"
					}
				},
				"type": "object",
				"required": [
					"bucket"
				],
				"title": "CreateBucketWebsiteHosting"
			},
			"CreateCodeSigningConfig": {
				"properties": {
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"allowed_publishers": {
						"additionalProperties": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"type": "object",
						"title": "Allowed Publishers"
					},
					"code_signing_policies": {
						"additionalProperties": {
							"type": "string",
							"enum": [
								"Warn",
								"Enforce"
							]
						},
						"type": "object",
						"title": "Code Signing Policies"
					}
				},
				"type": "object",
				"required": [
					"allowed_publishers",
					"code_signing_policies"
				],
				"title": "CreateCodeSigningConfig"
			},
			"CreateEventSourceMapping": {
				"properties": {
					"event_source_arn": {
						"type": "string",
						"title": "Event Source Arn"
					},
					"function_name": {
						"type": "string",
						"title": "Function Name"
					},
					"enabled": {
						"type": "boolean",
						"title": "Enabled",
						"default": true
					},
					"batch_size": {
						"type": "integer",
						"title": "Batch Size",
						"default": 100
					},
					"maximum_batching_window_in_seconds": {
						"type": "integer",
						"title": "Maximum Batching Window In Seconds",
						"default": 0
					},
					"parallelization_factor": {
						"type": "integer",
						"title": "Parallelization Factor",
						"default": 1
					},
					"starting_position": {
						"type": "string",
						"enum": [
							"TRIM_HORIZON",
							"LATEST",
							"AT_TIMESTAMP"
						],
						"title": "Starting Position",
						"default": "LATEST"
					},
					"starting_position_timestamp": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Starting Position Timestamp"
					},
					"destination_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Destination Config"
					},
					"maximum_record_age_in_seconds": {
						"type": "integer",
						"title": "Maximum Record Age In Seconds",
						"default": -1
					},
					"bisect_batch_on_function_error": {
						"type": "boolean",
						"title": "Bisect Batch On Function Error",
						"default": false
					},
					"maximum_retry_attempts": {
						"type": "integer",
						"title": "Maximum Retry Attempts",
						"default": -1
					},
					"tumbling_window_in_seconds": {
						"type": "integer",
						"title": "Tumbling Window In Seconds",
						"default": 0
					},
					"topics": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Topics"
					},
					"queues": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Queues"
					},
					"source_access_configurations": {
						"items": {
							"additionalProperties": true,
							"type": "object"
						},
						"type": "array",
						"title": "Source Access Configurations"
					},
					"self_managed_event_source": {
						"additionalProperties": true,
						"type": "object",
						"title": "Self Managed Event Source"
					},
					"function_response_types": {
						"items": {
							"type": "string",
							"const": "ReportBatchItemFailures"
						},
						"type": "array",
						"title": "Function Response Types"
					},
					"amazon_managed_kafka_event_source_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Amazon Managed Kafka Event Source Config"
					},
					"self_managed_kafka_event_source_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Self Managed Kafka Event Source Config"
					},
					"scaling_config": {
						"additionalProperties": {
							"type": "integer"
						},
						"type": "object",
						"title": "Scaling Config"
					},
					"document_db_event_source_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Document Db Event Source Config"
					}
				},
				"type": "object",
				"required": [
					"event_source_arn",
					"function_name",
					"source_access_configurations",
					"function_response_types"
				],
				"title": "CreateEventSourceMapping"
			},
			"CreateFunction": {
				"properties": {
					"function_name": {
						"type": "string",
						"title": "Function Name"
					},
					"runtime": {
						"type": "string",
						"enum": [
							"python3.9",
							"python3.10",
							"python3.11",
							"python3.12",
							"nodejs18.x",
							"nodejs20.x",
							"java11",
							"java17",
							"java21",
							"dotnet6",
							"dotnet8",
							"go1.x",
							"ruby3.2",
							"ruby3.3",
							"provided.al2",
							"provided.al2023"
						],
						"title": "Runtime"
					},
					"role": {
						"type": "string",
						"title": "Role"
					},
					"handler": {
						"type": "string",
						"title": "Handler"
					},
					"code": {
						"additionalProperties": true,
						"type": "object",
						"title": "Code"
					},
					"description": {
						"type": "string",
						"title": "Description",
						"default": ""
					},
					"timeout": {
						"type": "integer",
						"title": "Timeout",
						"default": 3
					},
					"memory_size": {
						"type": "integer",
						"title": "Memory Size",
						"default": 128
					},
					"publish": {
						"type": "boolean",
						"title": "Publish",
						"default": false
					},
					"environment_variables": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Environment Variables"
					},
					"dead_letter_config": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Dead Letter Config"
					},
					"kms_key_arn": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Kms Key Arn"
					},
					"tracing_config": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Tracing Config"
					},
					"tags": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Tags"
					},
					"layers": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Layers"
					},
					"file_system_configs": {
						"items": {
							"additionalProperties": true,
							"type": "object"
						},
						"type": "array",
						"title": "File System Configs"
					},
					"image_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Image Config"
					},
					"code_signing_config_arn": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Code Signing Config Arn"
					},
					"architectures": {
						"anyOf": [
							{
								"items": {
									"type": "string",
									"enum": [
										"x86_64",
										"arm64"
									]
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Architectures"
					},
					"ephemeral_storage": {
						"additionalProperties": {
							"type": "integer"
						},
						"type": "object",
						"title": "Ephemeral Storage"
					},
					"snap_start": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Snap Start"
					},
					"logging_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Logging Config"
					}
				},
				"type": "object",
				"required": [
					"function_name",
					"runtime",
					"role",
					"handler",
					"code",
					"file_system_configs"
				],
				"title": "CreateFunction"
			},
			"CreateFunctionUrlConfig": {
				"properties": {
					"function_name": {
						"type": "string",
						"title": "Function Name"
					},
					"config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Config"
					},
					"qualifier": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Qualifier"
					}
				},
				"type": "object",
				"required": [
					"function_name",
					"config"
				],
				"title": "CreateFunctionUrlConfig"
			},
			"CreateGroup": {
				"properties": {
					"group_name": {
						"type": "string",
						"title": "Group Name"
					},
					"path": {
						"type": "string",
						"title": "Path",
						"default": "/"
					}
				},
				"type": "object",
				"required": [
					"group_name"
				],
				"title": "CreateGroup"
			},
			"CreateInstanceProfile": {
				"properties": {
					"instance_profile_name": {
						"type": "string",
						"title": "Instance Profile Name"
					},
					"path": {
						"type": "string",
						"title": "Path",
						"default": "/"
					},
					"tags": {
						"items": {
							"additionalProperties": {
								"type": "string"
							},
							"type": "object"
						},
						"type": "array",
						"title": "Tags"
					}
				},
				"type": "object",
				"required": [
					"instance_profile_name"
				],
				"title": "CreateInstanceProfile"
			},
			"CreateLayerVersion": {
				"properties": {
					"layer_name": {
						"type": "string",
						"title": "Layer Name"
					},
					"description": {
						"type": "string",
						"title": "Description",
						"default": ""
					},
					"content": {
						"additionalProperties": true,
						"type": "object",
						"title": "Content"
					},
					"compatible_runtimes": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Compatible Runtimes"
					},
					"license_info": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "License Info"
					},
					"compatible_architectures": {
						"items": {
							"type": "string",
							"enum": [
								"x86_64",
								"arm64"
							]
						},
						"type": "array",
						"title": "Compatible Architectures"
					}
				},
				"type": "object",
				"required": [
					"layer_name",
					"content",
					"compatible_runtimes",
					"compatible_architectures"
				],
				"title": "CreateLayerVersion"
			},
			"CreateLoginProfile": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"password": {
						"type": "string",
						"title": "Password"
					},
					"password_reset_required": {
						"type": "boolean",
						"title": "Password Reset Required",
						"default": false
					}
				},
				"type": "object",
				"required": [
					"user_name",
					"password"
				],
				"title": "CreateLoginProfile"
			},
			"CreateOIDCProvider": {
				"properties": {
					"url": {
						"type": "string",
						"title": "Url"
					},
					"client_id_list": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Client Id List"
					},
					"thumbprint_list": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Thumbprint List"
					},
					"tags": {
						"items": {
							"additionalProperties": {
								"type": "string"
							},
							"type": "object"
						},
						"type": "array",
						"title": "Tags"
					}
				},
				"type": "object",
				"required": [
					"url",
					"client_id_list",
					"thumbprint_list"
				],
				"title": "CreateOIDCProvider"
			},
			"CreatePolicy": {
				"properties": {
					"policy_name": {
						"type": "string",
						"title": "Policy Name"
					},
					"policy_document": {
						"type": "string",
						"title": "Policy Document"
					},
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"path": {
						"type": "string",
						"title": "Path",
						"default": "/"
					},
					"tags": {
						"items": {
							"additionalProperties": {
								"type": "string"
							},
							"type": "object"
						},
						"type": "array",
						"title": "Tags"
					}
				},
				"type": "object",
				"required": [
					"policy_name",
					"policy_document"
				],
				"title": "CreatePolicy"
			},
			"CreatePolicyVersion": {
				"properties": {
					"policy_arn": {
						"type": "string",
						"title": "Policy Arn"
					},
					"policy_document": {
						"type": "string",
						"title": "Policy Document"
					},
					"set_as_default": {
						"type": "boolean",
						"title": "Set As Default",
						"default": false
					}
				},
				"type": "object",
				"required": [
					"policy_arn",
					"policy_document"
				],
				"title": "CreatePolicyVersion"
			},
			"CreateProvisionedConcurrencyConfig": {
				"properties": {
					"function_name": {
						"type": "string",
						"title": "Function Name"
					},
					"qualifier": {
						"type": "string",
						"title": "Qualifier"
					},
					"provisioned_concurrent_executions": {
						"type": "integer",
						"title": "Provisioned Concurrent Executions"
					},
					"provisioned_concurrency_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Provisioned Concurrency Config"
					}
				},
				"type": "object",
				"required": [
					"function_name",
					"qualifier",
					"provisioned_concurrent_executions",
					"provisioned_concurrency_config"
				],
				"title": "CreateProvisionedConcurrencyConfig"
			},
			"CreateRole": {
				"properties": {
					"role_name": {
						"type": "string",
						"title": "Role Name"
					},
					"assume_role_policy_document": {
						"type": "string",
						"title": "Assume Role Policy Document"
					},
					"path": {
						"type": "string",
						"title": "Path",
						"default": "/"
					},
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"max_session_duration": {
						"type": "integer",
						"title": "Max Session Duration",
						"default": 3600
					},
					"permissions_boundary": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Permissions Boundary"
					},
					"tags": {
						"items": {
							"additionalProperties": {
								"type": "string"
							},
							"type": "object"
						},
						"type": "array",
						"title": "Tags"
					}
				},
				"type": "object",
				"required": [
					"role_name",
					"assume_role_policy_document"
				],
				"title": "CreateRole"
			},
			"CreateSAMLProvider": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"saml_metadata_document": {
						"type": "string",
						"title": "Saml Metadata Document"
					},
					"tags": {
						"items": {
							"additionalProperties": {
								"type": "string"
							},
							"type": "object"
						},
						"type": "array",
						"title": "Tags"
					}
				},
				"type": "object",
				"required": [
					"name",
					"saml_metadata_document"
				],
				"title": "CreateSAMLProvider"
			},
			"CreateServiceLinkedRole": {
				"properties": {
					"aws_service_name": {
						"type": "string",
						"title": "Aws Service Name"
					},
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"custom_suffix": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Custom Suffix"
					}
				},
				"type": "object",
				"required": [
					"aws_service_name"
				],
				"title": "CreateServiceLinkedRole"
			},
			"CreateServiceSpecificCredential": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"service_name": {
						"type": "string",
						"title": "Service Name"
					}
				},
				"type": "object",
				"required": [
					"user_name",
					"service_name"
				],
				"title": "CreateServiceSpecificCredential"
			},
			"CreateUser": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"path": {
						"type": "string",
						"title": "Path",
						"default": "/"
					},
					"permissions_boundary": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Permissions Boundary"
					},
					"tags": {
						"items": {
							"additionalProperties": {
								"type": "string"
							},
							"type": "object"
						},
						"type": "array",
						"title": "Tags"
					}
				},
				"type": "object",
				"required": [
					"user_name"
				],
				"title": "CreateUser"
			},
			"CreateVirtualMFADevice": {
				"properties": {
					"virtual_mfa_device_name": {
						"type": "string",
						"title": "Virtual Mfa Device Name"
					},
					"path": {
						"type": "string",
						"title": "Path",
						"default": "/"
					},
					"tags": {
						"items": {
							"additionalProperties": {
								"type": "string"
							},
							"type": "object"
						},
						"type": "array",
						"title": "Tags"
					}
				},
				"type": "object",
				"required": [
					"virtual_mfa_device_name"
				],
				"title": "CreateVirtualMFADevice"
			},
			"DeactivateMFADevice": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"serial_number": {
						"type": "string",
						"title": "Serial Number"
					}
				},
				"type": "object",
				"required": [
					"user_name",
					"serial_number"
				],
				"title": "DeactivateMFADevice"
			},
			"DeleteAccessKey": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"access_key_id": {
						"type": "string",
						"title": "Access Key Id"
					}
				},
				"type": "object",
				"required": [
					"user_name",
					"access_key_id"
				],
				"title": "DeleteAccessKey"
			},
			"DetachGroupPolicy": {
				"properties": {
					"group_name": {
						"type": "string",
						"title": "Group Name"
					},
					"policy_arn": {
						"type": "string",
						"title": "Policy Arn"
					}
				},
				"type": "object",
				"required": [
					"group_name",
					"policy_arn"
				],
				"title": "DetachGroupPolicy"
			},
			"DetachRolePolicy": {
				"properties": {
					"role_name": {
						"type": "string",
						"title": "Role Name"
					},
					"policy_arn": {
						"type": "string",
						"title": "Policy Arn"
					}
				},
				"type": "object",
				"required": [
					"role_name",
					"policy_arn"
				],
				"title": "DetachRolePolicy"
			},
			"DetachUserPolicy": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"policy_arn": {
						"type": "string",
						"title": "Policy Arn"
					}
				},
				"type": "object",
				"required": [
					"user_name",
					"policy_arn"
				],
				"title": "DetachUserPolicy"
			},
			"EnableMFADevice": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"serial_number": {
						"type": "string",
						"title": "Serial Number"
					},
					"authentication_code_1": {
						"type": "string",
						"title": "Authentication Code 1"
					},
					"authentication_code_2": {
						"type": "string",
						"title": "Authentication Code 2"
					}
				},
				"type": "object",
				"required": [
					"user_name",
					"serial_number",
					"authentication_code_1",
					"authentication_code_2"
				],
				"title": "EnableMFADevice"
			},
			"GenerateOrganizationsAccessReport": {
				"properties": {
					"entity_path": {
						"type": "string",
						"title": "Entity Path"
					},
					"organizations_policy_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Organizations Policy Id"
					}
				},
				"type": "object",
				"required": [
					"entity_path"
				],
				"title": "GenerateOrganizationsAccessReport"
			},
			"GenerateServiceLastAccessedDetails": {
				"properties": {
					"arn": {
						"type": "string",
						"title": "Arn"
					},
					"granularity": {
						"type": "string",
						"enum": [
							"SERVICE_LEVEL",
							"ACTION_LEVEL"
						],
						"title": "Granularity",
						"default": "SERVICE_LEVEL"
					}
				},
				"type": "object",
				"required": [
					"arn"
				],
				"title": "GenerateServiceLastAccessedDetails"
			},
			"HTTPValidationError": {
				"properties": {
					"detail": {
						"items": {
							"$ref": "#/components/schemas/ValidationError"
						},
						"type": "array",
						"title": "Detail"
					}
				},
				"type": "object",
				"title": "HTTPValidationError"
			},
			"InvokeFunction": {
				"properties": {
					"function_name": {
						"type": "string",
						"title": "Function Name"
					},
					"invocation_type": {
						"type": "string",
						"enum": [
							"Event",
							"RequestResponse",
							"DryRun"
						],
						"title": "Invocation Type",
						"default": "RequestResponse"
					},
					"log_type": {
						"type": "string",
						"enum": [
							"None",
							"Tail"
						],
						"title": "Log Type",
						"default": "None"
					},
					"client_context": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Client Context"
					},
					"payload": {
						"additionalProperties": true,
						"type": "object",
						"title": "Payload"
					},
					"qualifier": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Qualifier"
					}
				},
				"type": "object",
				"required": [
					"function_name"
				],
				"title": "InvokeFunction"
			},
			"LambdaEventSourceMapping": {
				"properties": {
					"event_source_arn": {
						"type": "string",
						"title": "Event Source Arn"
					},
					"function_name": {
						"type": "string",
						"title": "Function Name"
					},
					"enabled": {
						"type": "boolean",
						"title": "Enabled",
						"default": true
					},
					"batch_size": {
						"type": "integer",
						"title": "Batch Size",
						"default": 10
					},
					"maximum_batching_window_in_seconds": {
						"type": "integer",
						"title": "Maximum Batching Window In Seconds",
						"default": 0
					},
					"parallelization_factor": {
						"type": "integer",
						"title": "Parallelization Factor",
						"default": 1
					},
					"starting_position": {
						"type": "string",
						"enum": [
							"TRIM_HORIZON",
							"LATEST",
							"AT_TIMESTAMP"
						],
						"title": "Starting Position",
						"default": "LATEST"
					},
					"starting_position_timestamp": {
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "null"
							}
						],
						"title": "Starting Position Timestamp"
					},
					"maximum_record_age_in_seconds": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Maximum Record Age In Seconds"
					},
					"bisect_batch_on_function_error": {
						"type": "boolean",
						"title": "Bisect Batch On Function Error",
						"default": false
					},
					"maximum_retry_attempts": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Maximum Retry Attempts"
					},
					"tumbling_window_in_seconds": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Tumbling Window In Seconds"
					},
					"topics": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Topics"
					},
					"queues": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Queues"
					},
					"source_access_configurations": {
						"items": {
							"additionalProperties": {
								"type": "string"
							},
							"type": "object"
						},
						"type": "array",
						"title": "Source Access Configurations"
					},
					"self_managed_event_source": {
						"additionalProperties": true,
						"type": "object",
						"title": "Self Managed Event Source"
					},
					"function_response_types": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Function Response Types"
					},
					"filter_criteria": {
						"additionalProperties": true,
						"type": "object",
						"title": "Filter Criteria"
					},
					"destination_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Destination Config"
					}
				},
				"type": "object",
				"required": [
					"event_source_arn",
					"function_name",
					"source_access_configurations"
				],
				"title": "LambdaEventSourceMapping"
			},
			"PutFunctionConcurrency": {
				"properties": {
					"function_name": {
						"type": "string",
						"title": "Function Name"
					},
					"reserved_concurrent_executions": {
						"type": "integer",
						"title": "Reserved Concurrent Executions"
					}
				},
				"type": "object",
				"required": [
					"function_name",
					"reserved_concurrent_executions"
				],
				"title": "PutFunctionConcurrency"
			},
			"PutGroupPolicy": {
				"properties": {
					"group_name": {
						"type": "string",
						"title": "Group Name"
					},
					"policy_name": {
						"type": "string",
						"title": "Policy Name"
					},
					"policy_document": {
						"type": "string",
						"title": "Policy Document"
					}
				},
				"type": "object",
				"required": [
					"group_name",
					"policy_name",
					"policy_document"
				],
				"title": "PutGroupPolicy"
			},
			"PutRolePolicy": {
				"properties": {
					"role_name": {
						"type": "string",
						"title": "Role Name"
					},
					"policy_name": {
						"type": "string",
						"title": "Policy Name"
					},
					"policy_document": {
						"type": "string",
						"title": "Policy Document"
					}
				},
				"type": "object",
				"required": [
					"role_name",
					"policy_name",
					"policy_document"
				],
				"title": "PutRolePolicy"
			},
			"PutUserPolicy": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"policy_name": {
						"type": "string",
						"title": "Policy Name"
					},
					"policy_document": {
						"type": "string",
						"title": "Policy Document"
					}
				},
				"type": "object",
				"required": [
					"user_name",
					"policy_name",
					"policy_document"
				],
				"title": "PutUserPolicy"
			},
			"RemoveRoleFromInstanceProfile": {
				"properties": {
					"instance_profile_name": {
						"type": "string",
						"title": "Instance Profile Name"
					},
					"role_name": {
						"type": "string",
						"title": "Role Name"
					}
				},
				"type": "object",
				"required": [
					"instance_profile_name",
					"role_name"
				],
				"title": "RemoveRoleFromInstanceProfile"
			},
			"RemoveUserFromGroup": {
				"properties": {
					"group_name": {
						"type": "string",
						"title": "Group Name"
					},
					"user_name": {
						"type": "string",
						"title": "User Name"
					}
				},
				"type": "object",
				"required": [
					"group_name",
					"user_name"
				],
				"title": "RemoveUserFromGroup"
			},
			"ResyncMFADevice": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"serial_number": {
						"type": "string",
						"title": "Serial Number"
					},
					"authentication_code_1": {
						"type": "string",
						"title": "Authentication Code 1"
					},
					"authentication_code_2": {
						"type": "string",
						"title": "Authentication Code 2"
					}
				},
				"type": "object",
				"required": [
					"user_name",
					"serial_number",
					"authentication_code_1",
					"authentication_code_2"
				],
				"title": "ResyncMFADevice"
			},
			"SimulatePrincipalPolicy": {
				"properties": {
					"policy_source_arn": {
						"type": "string",
						"title": "Policy Source Arn"
					},
					"action_names": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Action Names"
					},
					"resource_arns": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Resource Arns"
					},
					"policy_input_list": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Policy Input List"
					},
					"context_entries": {
						"anyOf": [
							{
								"items": {
									"additionalProperties": true,
									"type": "object"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Context Entries"
					},
					"resource_policy": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Resource Policy"
					},
					"max_items": {
						"type": "integer",
						"title": "Max Items",
						"default": 1000
					},
					"marker": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Marker"
					}
				},
				"type": "object",
				"required": [
					"policy_source_arn",
					"action_names"
				],
				"title": "SimulatePrincipalPolicy"
			},
			"TagResource": {
				"properties": {
					"resource_arn": {
						"type": "string",
						"title": "Resource Arn"
					},
					"tags": {
						"items": {
							"additionalProperties": {
								"type": "string"
							},
							"type": "object"
						},
						"type": "array",
						"title": "Tags"
					}
				},
				"type": "object",
				"required": [
					"resource_arn",
					"tags"
				],
				"title": "TagResource"
			},
			"UntagResource": {
				"properties": {
					"resource_arn": {
						"type": "string",
						"title": "Resource Arn"
					},
					"tag_keys": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Tag Keys"
					}
				},
				"type": "object",
				"required": [
					"resource_arn",
					"tag_keys"
				],
				"title": "UntagResource"
			},
			"UpdateAccessKey": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"access_key_id": {
						"type": "string",
						"title": "Access Key Id"
					},
					"status": {
						"type": "string",
						"enum": [
							"Active",
							"Inactive"
						],
						"title": "Status"
					}
				},
				"type": "object",
				"required": [
					"user_name",
					"access_key_id",
					"status"
				],
				"title": "UpdateAccessKey"
			},
			"UpdateAlias": {
				"properties": {
					"function_name": {
						"type": "string",
						"title": "Function Name"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"function_version": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Function Version"
					},
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"routing_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Routing Config"
					},
					"revision_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Revision Id"
					}
				},
				"type": "object",
				"required": [
					"function_name",
					"name",
					"routing_config"
				],
				"title": "UpdateAlias"
			},
			"UpdateFunctionCode": {
				"properties": {
					"function_name": {
						"type": "string",
						"title": "Function Name"
					},
					"zip_file": {
						"anyOf": [
							{
								"type": "string",
								"format": "binary"
							},
							{
								"type": "null"
							}
						],
						"title": "Zip File"
					},
					"s3_bucket": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "S3 Bucket"
					},
					"s3_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "S3 Key"
					},
					"s3_object_version": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "S3 Object Version"
					},
					"image_uri": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Image Uri"
					},
					"publish": {
						"type": "boolean",
						"title": "Publish",
						"default": false
					},
					"dry_run": {
						"type": "boolean",
						"title": "Dry Run",
						"default": false
					},
					"revision_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Revision Id"
					},
					"architectures": {
						"anyOf": [
							{
								"items": {
									"type": "string",
									"enum": [
										"x86_64",
										"arm64"
									]
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Architectures"
					}
				},
				"type": "object",
				"required": [
					"function_name"
				],
				"title": "UpdateFunctionCode"
			},
			"UpdateFunctionConfiguration": {
				"properties": {
					"function_name": {
						"type": "string",
						"title": "Function Name"
					},
					"role": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Role"
					},
					"handler": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Handler"
					},
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"timeout": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Timeout"
					},
					"memory_size": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Memory Size"
					},
					"environment_variables": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Environment Variables"
					},
					"dead_letter_config": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Dead Letter Config"
					},
					"kms_key_arn": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Kms Key Arn"
					},
					"tracing_config": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Tracing Config"
					},
					"layers": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Layers"
					},
					"file_system_configs": {
						"items": {
							"additionalProperties": true,
							"type": "object"
						},
						"type": "array",
						"title": "File System Configs"
					},
					"image_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Image Config"
					},
					"ephemeral_storage": {
						"additionalProperties": {
							"type": "integer"
						},
						"type": "object",
						"title": "Ephemeral Storage"
					},
					"snap_start": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Snap Start"
					},
					"logging_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Logging Config"
					},
					"revision_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Revision Id"
					}
				},
				"type": "object",
				"required": [
					"function_name",
					"file_system_configs"
				],
				"title": "UpdateFunctionConfiguration"
			},
			"UpdateGroup": {
				"properties": {
					"group_name": {
						"type": "string",
						"title": "Group Name"
					},
					"new_group_name": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "New Group Name"
					},
					"new_path": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "New Path"
					}
				},
				"type": "object",
				"required": [
					"group_name"
				],
				"title": "UpdateGroup"
			},
			"UpdateLoginProfile": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"password": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Password"
					},
					"password_reset_required": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Password Reset Required"
					}
				},
				"type": "object",
				"required": [
					"user_name"
				],
				"title": "UpdateLoginProfile"
			},
			"UpdateRole": {
				"properties": {
					"role_name": {
						"type": "string",
						"title": "Role Name"
					},
					"new_role_name": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "New Role Name"
					},
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"max_session_duration": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Max Session Duration"
					}
				},
				"type": "object",
				"required": [
					"role_name"
				],
				"title": "UpdateRole"
			},
			"UpdateUser": {
				"properties": {
					"user_name": {
						"type": "string",
						"title": "User Name"
					},
					"new_user_name": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "New User Name"
					},
					"new_path": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "New Path"
					},
					"permissions_boundary": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Permissions Boundary"
					}
				},
				"type": "object",
				"required": [
					"user_name"
				],
				"title": "UpdateUser"
			},
			"UploadObject": {
				"properties": {
					"bucket": {
						"type": "string",
						"title": "Bucket"
					},
					"key": {
						"type": "string",
						"title": "Key"
					},
					"file_path": {
						"type": "string",
						"title": "File Path"
					},
					"content_type": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Content Type"
					},
					"metadata": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Metadata"
					}
				},
				"type": "object",
				"required": [
					"bucket",
					"key",
					"file_path"
				],
				"title": "UploadObject"
			},
			"ValidationError": {
				"properties": {
					"loc": {
						"items": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "integer"
								}
							]
						},
						"type": "array",
						"title": "Location"
					},
					"msg": {
						"type": "string",
						"title": "Message"
					},
					"type": {
						"type": "string",
						"title": "Error Type"
					}
				},
				"type": "object",
				"required": [
					"loc",
					"msg",
					"type"
				],
				"title": "ValidationError"
			},
			"src__lambda___UpdateEventSourceMapping": {
				"properties": {
					"uuid": {
						"type": "string",
						"title": "Uuid"
					},
					"function_name": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Function Name"
					},
					"enabled": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Enabled"
					},
					"batch_size": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Batch Size"
					},
					"maximum_batching_window_in_seconds": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Maximum Batching Window In Seconds"
					},
					"destination_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Destination Config"
					},
					"maximum_record_age_in_seconds": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Maximum Record Age In Seconds"
					},
					"bisect_batch_on_function_error": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Bisect Batch On Function Error"
					},
					"maximum_retry_attempts": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Maximum Retry Attempts"
					},
					"parallelization_factor": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Parallelization Factor"
					},
					"source_access_configurations": {
						"items": {
							"additionalProperties": true,
							"type": "object"
						},
						"type": "array",
						"title": "Source Access Configurations"
					},
					"tumbling_window_in_seconds": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Tumbling Window In Seconds"
					},
					"function_response_types": {
						"items": {
							"type": "string",
							"const": "ReportBatchItemFailures"
						},
						"type": "array",
						"title": "Function Response Types"
					},
					"scaling_config": {
						"additionalProperties": {
							"type": "integer"
						},
						"type": "object",
						"title": "Scaling Config"
					},
					"document_db_event_source_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Document Db Event Source Config"
					}
				},
				"type": "object",
				"required": [
					"uuid",
					"source_access_configurations",
					"function_response_types"
				],
				"title": "UpdateEventSourceMapping"
			},
			"src__s3__UpdateEventSourceMapping": {
				"properties": {
					"uuid": {
						"type": "string",
						"title": "Uuid"
					},
					"enabled": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Enabled"
					},
					"batch_size": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Batch Size"
					},
					"maximum_batching_window_in_seconds": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Maximum Batching Window In Seconds"
					},
					"parallelization_factor": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Parallelization Factor"
					},
					"function_name": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Function Name"
					},
					"maximum_record_age_in_seconds": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Maximum Record Age In Seconds"
					},
					"bisect_batch_on_function_error": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Bisect Batch On Function Error"
					},
					"maximum_retry_attempts": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Maximum Retry Attempts"
					},
					"tumbling_window_in_seconds": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Tumbling Window In Seconds"
					},
					"filter_criteria": {
						"additionalProperties": true,
						"type": "object",
						"title": "Filter Criteria"
					},
					"destination_config": {
						"additionalProperties": true,
						"type": "object",
						"title": "Destination Config"
					}
				},
				"type": "object",
				"required": [
					"uuid"
				],
				"title": "UpdateEventSourceMapping"
			}
		}
	}
}